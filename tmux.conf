# :: smuddu 08072017 :: tmux.conf - edited at QCom
# :: smuddu 09112018 :: tmux.conf - edited at Arch
# :: smuddu 03202019 :: tmux.conf - edited at Arch
# :: some useful articles/stackoverflow links to give some context:
# ::  - https://robots.thoughtbot.com/how-to-copy-and-paste-with-tmux-on-mac-os-x
# ::  - https://stackoverflow.com/questions/8469612/how-do-i-make-tmux-reorder-windows-when-one-is-deleted

# C-b is not acceptable -- Vim uses it
unbind C-b
set-option -g prefix C-q

# Reload config
bind-key R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Mouse behavior
set -g mouse on

# Colors and fonts
# To get the colors in NeoVIM and tmux right,
# adding the settings recommended by NeoVIM :runhealthcheck
set-option -g default-terminal "screen-256color"
# set-option -sa terminal-overrides ',xterm-256color:RGB'

# set-option -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# run -b ~/.tmux/themes/srcery-tmux/srcery.tmux
# set -g @srcery_tmux_patched_font '1'


#bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# This may come in handy
bind-key bspace previous-window
bind-key space next-layout

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Ctrl-Space to zoom current pane
bind-key -n C-Space resize-pane -Z

# use vim-like keys for splits and windows
unbind %
bind-key | split-window -h -c "#{pane_current_path}"
unbind '"'
bind-key - split-window -c "#{pane_current_path}"

# Allows for faster key repetition
# set -sg escape-time 10
set-option -s escape-time 10

# Save a lot of history
set -g history-limit 100000

## Join windows: <prefix> s, <prefix> j
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Vi copypaste mode :: vi is good
# Note that this takes a while getting used to
setw -g mode-keys vi


# re-order windows if some windows are deleted
set-option -g renumber-windows on

# uncomment below stanza to enable smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Setup 'v' to begin selection as in Vim
# Update default binding of `Enter` to also use copy-pipe

# New keybindings for vi-mode when version >= 2.4
# https://github.com/tmux/tmux/issues/754
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  'bind-key -T copy-mode-vi v send-keys -X begin-selection ; \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" ; \
  unbind -T copy-mode-vi Enter ; \
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; ' \
  'bind-key -t vi-copy v begin-selection ; \
  bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy" ; \
  unbind -t vi-copy Enter ; \
  bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"; '

# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

# Double clicking selects the word also when not in copy-mode
bind-key -T root DoubleClick1Pane select-pane \; copy-mode \; send-keys -X select-word

# Buffers to/from Mac clipboard, yay tmux book from pragprog
# If you are using this on Linux -- starting tmux will crash it because pbcopy and paste-buffer do not exist
# bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

#bind-key C-c run-shell 'tmux save-buffer - | reattach-to-user-namespace pbcopy'
#bind-key C-v run-shell 'reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d'
#bind -t vi-copy y   'reattach-to-user-namespace pbcopy'

# The next line works on Mac OS X -- enable this on a mac
set-option -g default-command "reattach-to-user-namespace -l zsh"
# The next line works only on Linux -- enable this on Linux/Ubuntu machines and disable the line above
#set-option -g default-command 'exec reattach-to-user-namespace -l zsh'

# Allows us to use C-a a <command> to send commands to a TMUX session inside another TMUX session
# Using nested TMUX sessions is never a good idea (IMO) -- so we will not need the following option
#bind-key a send-prefix

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/zsh -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Activity monitoring - loud or quiet?
set-option -g visual-activity on
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity on
set-option -g bell-action none

# The following bindings allow VIM-style pane traversal -- and I would love that
# But they will interfere with other key-bindings that I also like -- like joining panes 
#
# hjkl pane traversal 
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

### another set of shortcuts for pane navigation -- that is really useful
bind -n 'M-Left' select-pane -L
bind -n 'M-Down' select-pane -D
bind -n 'M-Up' select-pane -U
bind -n 'M-Right' select-pane -R

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# ######################
# TERMINAL OVERRIDES
# ######################
# set-option -ga terminal-overrides ",tmux-256color:Tc"

#######################
#### DESIGN CHANGES ###
#######################

set-window-option -g display-panes-time 1500

# Colors - derived from Powerline Double Cyan by Jim Myhrberg
set -g status-interval 0
set -g status-fg colour240
set -g status-bg colour233
set -g status-left "#[fg=colour242] #(uname -n | cut -d. -f1) "
set -g status-right "#[fg=colour242]:#{session_name}:#{window_index}.#{pane_index} "
set -g window-status-format "#[bg=colour233,fg=colour240]  ⋅#I⋅ #W "
set -g window-status-current-format "#[bg=colour233,fg=colour240,nobold] 《#I》#W #[fg=black,bg=colour233,nobold]"

# set -g window-status-current-bg colour39
# set -g window-status-current-fg colour235
# set -g window-status-activity-bg colour245 # fg and bg are flipped here due to
# set -g window-status-activity-fg colour233 # a bug in tmux
# set -g window-status-separator ""
set -g status-justify centre
# set -g pane-border-bg default
# set -g pane-border-fg colour238
# set -g pane-active-border-bg default
# set -g pane-active-border-fg colour39
set -g display-panes-colour colour233
set -g display-panes-active-colour colour245
set -g clock-mode-colour colour39
set -g clock-mode-style 24
# set -g message-bg black
# set -g message-fg colour39
# set -g message-command-bg colour233
# set -g message-command-fg black
# set -g mode-bg colour39
# set -g mode-fg colour232

#or if you a brighter active border, uncomment the following line:
#set -g pane-active-border-bg colour51

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'srcery-colors/srcery-tmux'

set -g @continuum-restore 'on'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
